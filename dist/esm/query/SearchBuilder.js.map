{"version":3,"file":"SearchBuilder.js","sources":["../../../src/query/SearchBuilder.ts"],"sourcesContent":["import { RequestConfig } from \"@/http\";\nimport type {\n  SearchRequest,\n  PaginatedSearchRequest,\n  ScopeParameterValue,\n  ComparisonOperator,\n  LogicalOperator,\n  SortDirection,\n  AggregationFunction,\n  SearchPermission,\n  Filter,\n  FilterCriteria,\n  SortCriteria,\n  FieldSelection,\n  InstructionField,\n  RelationInclude,\n  FilterValue,\n  IQuery,\n} from \"./types\";\n\ntype ExtractKeys<T> = keyof T & string;\ntype ExtractRelationKeys<T> = {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  [K in keyof T]: T[K] extends Array<infer _>\n    ? K & string\n    : T[K] extends object\n      ? K & string\n      : never;\n}[keyof T] &\n  string;\n\ntype ValueType<T, K extends keyof T> =\n  T[K] extends Array<infer U>\n    ? U | U[]\n    : T[K] extends (infer V)[]\n      ? V | V[]\n      : T[K];\n\nexport class SearchBuilder<T> {\n  private searchRequest: SearchRequest = {};\n  private queryInstance?: IQuery<T>;\n\n  public withText(value: string): this {\n    this.searchRequest.text = { value };\n    return this;\n  }\n\n  public withScope(\n    name: string,\n    parameters: Array<ScopeParameterValue> = [],\n  ): this {\n    if (!this.searchRequest.scopes) {\n      this.searchRequest.scopes = [];\n    }\n    this.searchRequest.scopes.push({ name, parameters });\n    return this;\n  }\n\n  public withFilter<K extends ExtractKeys<T>>(\n    field: K,\n    operator: ComparisonOperator,\n    value: ValueType<T, K>,\n    type?: LogicalOperator,\n  ): this {\n    if (!this.searchRequest.filters) {\n      this.searchRequest.filters = [];\n    }\n    this.searchRequest.filters.push({\n      field,\n      operator,\n      value: value as FilterValue,\n      type,\n    });\n    return this;\n  }\n\n  public withNestedFilters(filters: Array<FilterCriteria>): this {\n    if (!this.searchRequest.filters) {\n      this.searchRequest.filters = [];\n    }\n    this.searchRequest.filters.push({ nested: filters });\n    return this;\n  }\n\n  public withSort<K extends ExtractKeys<T>>(\n    field: K,\n    direction: SortDirection = \"asc\",\n  ): this {\n    if (!this.searchRequest.sorts) {\n      this.searchRequest.sorts = [];\n    }\n    this.searchRequest.sorts.push({ field, direction });\n    return this;\n  }\n\n  public withSelect<K extends ExtractKeys<T>>(field: K): this {\n    if (!this.searchRequest.selects) {\n      this.searchRequest.selects = [];\n    }\n    this.searchRequest.selects.push({ field });\n    return this;\n  }\n\n  public withInclude<K extends ExtractRelationKeys<T>>(\n    relation: K,\n    options: {\n      filters?: Array<Filter>;\n      sorts?: Array<SortCriteria>;\n      selects?: Array<FieldSelection>;\n      scopes?: Array<{ name: string; parameters: Array<ScopeParameterValue> }>;\n      limit?: number;\n    } = {},\n  ): this {\n    if (!this.searchRequest.includes) {\n      this.searchRequest.includes = [];\n    }\n    const include: RelationInclude = {\n      relation,\n      ...options,\n    };\n    this.searchRequest.includes.push(include);\n    return this;\n  }\n\n  // Aggregations avec typage strict\n  public withAggregate<K extends ExtractRelationKeys<T>>(\n    relation: K,\n    type: AggregationFunction,\n    field?: string,\n    filters?: Array<Filter>,\n  ): this {\n    if (!this.searchRequest.aggregates) {\n      this.searchRequest.aggregates = [];\n    }\n    this.searchRequest.aggregates.push({ relation, type, field, filters });\n    return this;\n  }\n\n  public withInstruction(name: string, fields: Array<InstructionField>): this {\n    if (!this.searchRequest.instructions) {\n      this.searchRequest.instructions = [];\n    }\n    this.searchRequest.instructions.push({ name, fields });\n    return this;\n  }\n\n  public withGate(permission: SearchPermission): this {\n    if (!this.searchRequest.Gates) {\n      this.searchRequest.Gates = [];\n    }\n    this.searchRequest.Gates.push(permission);\n    return this;\n  }\n\n  public withPagination(page: number, limit: number): this {\n    (this.searchRequest as PaginatedSearchRequest).page = page;\n    (this.searchRequest as PaginatedSearchRequest).limit = limit;\n    return this;\n  }\n\n  public async search<TResponse = Array<T>>(\n    options: Partial<RequestConfig> = {},\n  ): Promise<TResponse> {\n    if (!this.queryInstance) {\n      throw new Error(\"No query instance provided to execute the search\");\n    }\n    return await this.queryInstance.search<TResponse>(this.build(), options);\n  }\n\n  public build(): SearchRequest | PaginatedSearchRequest {\n    return this.searchRequest;\n  }\n  public setQueryInstance(instance: IQuery<T>) {\n    return (this.queryInstance = instance);\n  }\n}\n"],"names":[],"mappings":";;;AAsCO,MAAM,cAAiB;AAAA,EAAvB;AACG,yCAA+B,CAAC;AAChC;AAAA;AAAA,EAED,SAAS,OAAqB;AAC9B,SAAA,cAAc,OAAO,EAAE,MAAM;AAC3B,WAAA;AAAA,EAAA;AAAA,EAGF,UACL,MACA,aAAyC,IACnC;AACF,QAAA,CAAC,KAAK,cAAc,QAAQ;AACzB,WAAA,cAAc,SAAS,CAAC;AAAA,IAAA;AAE/B,SAAK,cAAc,OAAO,KAAK,EAAE,MAAM,YAAY;AAC5C,WAAA;AAAA,EAAA;AAAA,EAGF,WACL,OACA,UACA,OACA,MACM;AACF,QAAA,CAAC,KAAK,cAAc,SAAS;AAC1B,WAAA,cAAc,UAAU,CAAC;AAAA,IAAA;AAE3B,SAAA,cAAc,QAAQ,KAAK;AAAA,MAC9B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA,CACD;AACM,WAAA;AAAA,EAAA;AAAA,EAGF,kBAAkB,SAAsC;AACzD,QAAA,CAAC,KAAK,cAAc,SAAS;AAC1B,WAAA,cAAc,UAAU,CAAC;AAAA,IAAA;AAEhC,SAAK,cAAc,QAAQ,KAAK,EAAE,QAAQ,SAAS;AAC5C,WAAA;AAAA,EAAA;AAAA,EAGF,SACL,OACA,YAA2B,OACrB;AACF,QAAA,CAAC,KAAK,cAAc,OAAO;AACxB,WAAA,cAAc,QAAQ,CAAC;AAAA,IAAA;AAE9B,SAAK,cAAc,MAAM,KAAK,EAAE,OAAO,WAAW;AAC3C,WAAA;AAAA,EAAA;AAAA,EAGF,WAAqC,OAAgB;AACtD,QAAA,CAAC,KAAK,cAAc,SAAS;AAC1B,WAAA,cAAc,UAAU,CAAC;AAAA,IAAA;AAEhC,SAAK,cAAc,QAAQ,KAAK,EAAE,OAAO;AAClC,WAAA;AAAA,EAAA;AAAA,EAGF,YACL,UACA,UAMI,IACE;AACF,QAAA,CAAC,KAAK,cAAc,UAAU;AAC3B,WAAA,cAAc,WAAW,CAAC;AAAA,IAAA;AAEjC,UAAM,UAA2B;AAAA,MAC/B;AAAA,MACA,GAAG;AAAA,IACL;AACK,SAAA,cAAc,SAAS,KAAK,OAAO;AACjC,WAAA;AAAA,EAAA;AAAA;AAAA,EAIF,cACL,UACA,MACA,OACA,SACM;AACF,QAAA,CAAC,KAAK,cAAc,YAAY;AAC7B,WAAA,cAAc,aAAa,CAAC;AAAA,IAAA;AAE9B,SAAA,cAAc,WAAW,KAAK,EAAE,UAAU,MAAM,OAAO,SAAS;AAC9D,WAAA;AAAA,EAAA;AAAA,EAGF,gBAAgB,MAAc,QAAuC;AACtE,QAAA,CAAC,KAAK,cAAc,cAAc;AAC/B,WAAA,cAAc,eAAe,CAAC;AAAA,IAAA;AAErC,SAAK,cAAc,aAAa,KAAK,EAAE,MAAM,QAAQ;AAC9C,WAAA;AAAA,EAAA;AAAA,EAGF,SAAS,YAAoC;AAC9C,QAAA,CAAC,KAAK,cAAc,OAAO;AACxB,WAAA,cAAc,QAAQ,CAAC;AAAA,IAAA;AAEzB,SAAA,cAAc,MAAM,KAAK,UAAU;AACjC,WAAA;AAAA,EAAA;AAAA,EAGF,eAAe,MAAc,OAAqB;AACtD,SAAK,cAAyC,OAAO;AACrD,SAAK,cAAyC,QAAQ;AAChD,WAAA;AAAA,EAAA;AAAA,EAGT,MAAa,OACX,UAAkC,IACd;AAChB,QAAA,CAAC,KAAK,eAAe;AACjB,YAAA,IAAI,MAAM,kDAAkD;AAAA,IAAA;AAEpE,WAAO,MAAM,KAAK,cAAc,OAAkB,KAAK,SAAS,OAAO;AAAA,EAAA;AAAA,EAGlE,QAAgD;AACrD,WAAO,KAAK;AAAA,EAAA;AAAA,EAEP,iBAAiB,UAAqB;AAC3C,WAAQ,KAAK,gBAAgB;AAAA,EAAA;AAEjC;"}