{"version":3,"file":"Relation.js","sources":["../../../../src/mutation/builder/Relation.ts"],"sourcesContent":["import type {\n  AttachRelationDefinition,\n  Attributes,\n  CreateRelationParams,\n  CreateValidRelationOperation,\n  DetachRelationDefinition,\n  IRelation,\n  RelationDefinition,\n  SimpleKey,\n  SyncParams,\n  SyncRelationDefinition,\n  ToggleParams,\n  ToggleRelationDefinition,\n  UpdateRelationParams,\n  UpdateValidRelationOperation,\n} from \"../types\";\n\nexport class Relation implements IRelation {\n  public add<T extends Attributes, TRelationKeys extends keyof T = never>(\n    params: CreateRelationParams<T, TRelationKeys>,\n  ): CreateValidRelationOperation {\n    const { attributes, relations } = params;\n\n    const relationDefinition = {\n      operation: \"create\" as const,\n      attributes,\n      relations,\n    } as CreateValidRelationOperation;\n\n    this.defineRelationDefinition(relationDefinition);\n    this.addGetters(relationDefinition, attributes);\n\n    return relationDefinition;\n  }\n\n  public edit<T extends Attributes, TRelationKeys extends keyof T = never>(\n    params: UpdateRelationParams<T, TRelationKeys>,\n  ): UpdateValidRelationOperation {\n    const { key, attributes, relations } = params;\n\n    const relationDefinition = {\n      operation: \"update\" as const,\n      key,\n      attributes,\n      relations,\n    } as UpdateValidRelationOperation;\n\n    this.defineRelationDefinition(relationDefinition);\n    this.addGetters(relationDefinition, attributes);\n\n    return relationDefinition;\n  }\n\n  public attach(key: SimpleKey): AttachRelationDefinition {\n    return this.createSimpleOperation(\"attach\", key);\n  }\n\n  public detach(key: SimpleKey): DetachRelationDefinition {\n    return this.createSimpleOperation(\"detach\", key);\n  }\n\n  public sync<T>(params: SyncParams<T>): SyncRelationDefinition<T> {\n    const { key, attributes, pivot, withoutDetaching } = params;\n\n    const result = {\n      operation: \"sync\" as const,\n      key,\n      without_detaching: withoutDetaching,\n      ...(attributes && { attributes }),\n      ...(pivot && { pivot }),\n    };\n\n    this.defineRelationDefinition(result);\n    return result;\n  }\n\n  public toggle<T>(params: ToggleParams<T>): ToggleRelationDefinition<T> {\n    const { key, attributes, pivot } = params;\n\n    const result = {\n      operation: \"toggle\" as const,\n      key,\n      ...(attributes && { attributes }),\n      ...(pivot && { pivot }),\n    };\n\n    this.defineRelationDefinition(result);\n    return result;\n  }\n\n  // Méthodes privées\n  private createSimpleOperation<T extends \"attach\" | \"detach\">(\n    operation: T,\n    key: SimpleKey,\n  ): T extends \"attach\" ? AttachRelationDefinition : DetachRelationDefinition {\n    const result = {\n      operation,\n      key,\n    } as T extends \"attach\"\n      ? AttachRelationDefinition\n      : DetachRelationDefinition;\n\n    this.defineRelationDefinition(result);\n    return result;\n  }\n\n  private defineRelationDefinition(result: RelationDefinition): void {\n    Object.defineProperty(result, \"__relationDefinition\", {\n      value: true,\n      enumerable: false,\n      writable: false,\n      configurable: true,\n    });\n  }\n\n  private addGetters(\n    relationDefinition:\n      | CreateValidRelationOperation\n      | UpdateValidRelationOperation,\n    normalAttributes: Attributes,\n  ): void {\n    for (const key of Object.keys(normalAttributes)) {\n      Object.defineProperty(relationDefinition, key, {\n        get() {\n          return normalAttributes[key];\n        },\n        enumerable: true,\n      });\n    }\n  }\n}\n"],"names":[],"mappings":"AAiBO,MAAM,SAA8B;AAAA,EAClC,IACL,QAC8B;AACxB,UAAA,EAAE,YAAY,UAAA,IAAc;AAElC,UAAM,qBAAqB;AAAA,MACzB,WAAW;AAAA,MACX;AAAA,MACA;AAAA,IACF;AAEA,SAAK,yBAAyB,kBAAkB;AAC3C,SAAA,WAAW,oBAAoB,UAAU;AAEvC,WAAA;AAAA,EAAA;AAAA,EAGF,KACL,QAC8B;AAC9B,UAAM,EAAE,KAAK,YAAY,UAAc,IAAA;AAEvC,UAAM,qBAAqB;AAAA,MACzB,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEA,SAAK,yBAAyB,kBAAkB;AAC3C,SAAA,WAAW,oBAAoB,UAAU;AAEvC,WAAA;AAAA,EAAA;AAAA,EAGF,OAAO,KAA0C;AAC/C,WAAA,KAAK,sBAAsB,UAAU,GAAG;AAAA,EAAA;AAAA,EAG1C,OAAO,KAA0C;AAC/C,WAAA,KAAK,sBAAsB,UAAU,GAAG;AAAA,EAAA;AAAA,EAG1C,KAAQ,QAAkD;AAC/D,UAAM,EAAE,KAAK,YAAY,OAAO,iBAAqB,IAAA;AAErD,UAAM,SAAS;AAAA,MACb,WAAW;AAAA,MACX;AAAA,MACA,mBAAmB;AAAA,MACnB,GAAI,cAAc,EAAE,WAAW;AAAA,MAC/B,GAAI,SAAS,EAAE,MAAM;AAAA,IACvB;AAEA,SAAK,yBAAyB,MAAM;AAC7B,WAAA;AAAA,EAAA;AAAA,EAGF,OAAU,QAAsD;AACrE,UAAM,EAAE,KAAK,YAAY,MAAU,IAAA;AAEnC,UAAM,SAAS;AAAA,MACb,WAAW;AAAA,MACX;AAAA,MACA,GAAI,cAAc,EAAE,WAAW;AAAA,MAC/B,GAAI,SAAS,EAAE,MAAM;AAAA,IACvB;AAEA,SAAK,yBAAyB,MAAM;AAC7B,WAAA;AAAA,EAAA;AAAA;AAAA,EAID,sBACN,WACA,KAC0E;AAC1E,UAAM,SAAS;AAAA,MACb;AAAA,MACA;AAAA,IACF;AAIA,SAAK,yBAAyB,MAAM;AAC7B,WAAA;AAAA,EAAA;AAAA,EAGD,yBAAyB,QAAkC;AAC1D,WAAA,eAAe,QAAQ,wBAAwB;AAAA,MACpD,OAAO;AAAA,MACP,YAAY;AAAA,MACZ,UAAU;AAAA,MACV,cAAc;AAAA,IAAA,CACf;AAAA,EAAA;AAAA,EAGK,WACN,oBAGA,kBACM;AACN,eAAW,OAAO,OAAO,KAAK,gBAAgB,GAAG;AACxC,aAAA,eAAe,oBAAoB,KAAK;AAAA,QAC7C,MAAM;AACJ,iBAAO,iBAAiB,GAAG;AAAA,QAC7B;AAAA,QACA,YAAY;AAAA,MAAA,CACb;AAAA,IAAA;AAAA,EACH;AAEJ;"}