{"version":3,"file":"Model.js","sources":["../../../../src/mutation/builder/Model.ts"],"sourcesContent":["import type {\n  AttachRelationDefinition,\n  Attributes,\n  BuilderOnly,\n  CreateRelationParams,\n  CreateValidRelationOperation,\n  DetachRelationDefinition,\n  ExtractModelAttributes,\n  IModel,\n  IRelation,\n  MutationFunction,\n  MutationRequest,\n  MutationResponse,\n  SimpleKey,\n  StrictCreateRelationsMap,\n  StrictUpdateRelationsMap,\n  SyncParams,\n  SyncRelationDefinition,\n  ToggleParams,\n  ToggleRelationDefinition,\n  TypedMutationOperation,\n  UpdateRelationParams,\n  UpdateValidRelationOperation,\n} from \"@/mutation/types\";\nimport type { RequestConfig } from \"@/http/types\";\nimport { Relation } from \"@/mutation/builder/Relation\";\n\nexport class Model<TModel>\n  extends Relation\n  implements IModel<TModel>, BuilderOnly<TModel> {\n  private operations: Array<\n    TypedMutationOperation<TModel, Record<string, unknown>>\n  > = [];\n  private mutationFn: MutationFunction<TModel> | null = null;\n  private relation: IRelation;\n\n  constructor (relation: IRelation) {\n    super();\n    this.relation = relation;\n  }\n\n  public setMutationFunction(fn: MutationFunction<TModel>): void {\n    this.mutationFn = fn;\n  }\n\n  public create<\n    T extends Record<string, unknown>,\n    TRelationKeys extends keyof T = never,\n  >(params: {\n    attributes: T;\n    relations?: StrictCreateRelationsMap<\n      Record<Extract<TRelationKeys, string>, unknown>\n    >;\n  }): BuilderOnly<TModel> {\n    const { attributes, relations = {} } = params;\n\n    const operation: TypedMutationOperation<TModel, Record<string, unknown>> = {\n      operation: \"create\",\n      attributes: attributes as ExtractModelAttributes<TModel>,\n      relations: relations as Record<string, unknown>,\n    };\n\n    this.operations.push(operation);\n\n    return {\n      build: this.build.bind(this),\n      mutate: this.mutate.bind(this),\n    };\n  }\n\n  public update<\n    T extends Record<string, unknown>,\n    TRelationKeys extends keyof T = never,\n  >(\n    key: SimpleKey,\n    params: {\n      attributes?: T;\n      relations?: StrictUpdateRelationsMap<\n        Record<Extract<TRelationKeys, string>, unknown>\n      >;\n    },\n  ): BuilderOnly<TModel> {\n    const { attributes, relations = {} } = params;\n\n    const operation: TypedMutationOperation<TModel, Record<string, unknown>> = {\n      operation: \"update\",\n      key,\n      attributes: attributes as ExtractModelAttributes<TModel>,\n      relations: relations as Record<string, unknown>,\n    };\n\n    this.operations.push(operation);\n\n    return {\n      build: this.build.bind(this),\n      mutate: this.mutate.bind(this),\n    };\n  }\n\n  public build(): MutationRequest<TModel, Record<string, unknown>> {\n    const result = [...this.operations];\n    this.operations = [];\n    return { mutate: result };\n  }\n\n  public async mutate(\n    options?: Partial<RequestConfig>,\n  ): Promise<MutationResponse> {\n    if (!this.mutationFn) {\n      throw new Error(\"Mutation function not provided to builder\");\n    }\n\n    const data = this.build();\n    return this.mutationFn(data, options);\n  }\n  public override add<\n    T extends Attributes,\n    TRelationKeys extends keyof T = never,\n  >(\n    params: CreateRelationParams<T, TRelationKeys>,\n  ): CreateValidRelationOperation {\n    const { attributes, relations } = params;\n    return this.relation.add<T, TRelationKeys>({\n      attributes,\n      relations,\n    });\n  }\n\n  public override edit<\n    T extends Attributes,\n    TRelationKeys extends keyof T = never,\n  >(\n    params: UpdateRelationParams<T, TRelationKeys>,\n  ): UpdateValidRelationOperation {\n    const { key, attributes, relations } = params;\n    return this.relation.edit<T, TRelationKeys>({\n      key,\n      attributes,\n      relations,\n    });\n  }\n\n  public override attach(key: SimpleKey): AttachRelationDefinition {\n    return this.relation.attach(key);\n  }\n\n  public override detach(key: SimpleKey): DetachRelationDefinition {\n    return this.relation.detach(key);\n  }\n\n  public override sync<T>(params: SyncParams<T>): SyncRelationDefinition<T> {\n    const { key, attributes, pivot, withoutDetaching } = params;\n    return this.relation.sync<T>({\n      key,\n      attributes,\n      pivot,\n      withoutDetaching,\n    });\n  }\n\n  public override toggle<T>(\n    params: ToggleParams<T>,\n  ): ToggleRelationDefinition<T> {\n    const { key, attributes, pivot } = params;\n    return this.relation.toggle<T>({\n      key,\n      attributes,\n      pivot,\n    });\n  }\n}\n"],"names":[],"mappings":";;;;AA2BO,MAAM,cACH,SACuC;AAAA,EAO/C,YAAa,UAAqB;AAC1B,UAAA;AAPA,sCAEJ,CAAC;AACG,sCAA8C;AAC9C;AAIN,SAAK,WAAW;AAAA,EAAA;AAAA,EAGX,oBAAoB,IAAoC;AAC7D,SAAK,aAAa;AAAA,EAAA;AAAA,EAGb,OAGL,QAKsB;AACtB,UAAM,EAAE,YAAY,YAAY,CAAA,EAAO,IAAA;AAEvC,UAAM,YAAqE;AAAA,MACzE,WAAW;AAAA,MACX;AAAA,MACA;AAAA,IACF;AAEK,SAAA,WAAW,KAAK,SAAS;AAEvB,WAAA;AAAA,MACL,OAAO,KAAK,MAAM,KAAK,IAAI;AAAA,MAC3B,QAAQ,KAAK,OAAO,KAAK,IAAI;AAAA,IAC/B;AAAA,EAAA;AAAA,EAGK,OAIL,KACA,QAMqB;AACrB,UAAM,EAAE,YAAY,YAAY,CAAA,EAAO,IAAA;AAEvC,UAAM,YAAqE;AAAA,MACzE,WAAW;AAAA,MACX;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEK,SAAA,WAAW,KAAK,SAAS;AAEvB,WAAA;AAAA,MACL,OAAO,KAAK,MAAM,KAAK,IAAI;AAAA,MAC3B,QAAQ,KAAK,OAAO,KAAK,IAAI;AAAA,IAC/B;AAAA,EAAA;AAAA,EAGK,QAA0D;AAC/D,UAAM,SAAS,CAAC,GAAG,KAAK,UAAU;AAClC,SAAK,aAAa,CAAC;AACZ,WAAA,EAAE,QAAQ,OAAO;AAAA,EAAA;AAAA,EAG1B,MAAa,OACX,SAC2B;AACvB,QAAA,CAAC,KAAK,YAAY;AACd,YAAA,IAAI,MAAM,2CAA2C;AAAA,IAAA;AAGvD,UAAA,OAAO,KAAK,MAAM;AACjB,WAAA,KAAK,WAAW,MAAM,OAAO;AAAA,EAAA;AAAA,EAEtB,IAId,QAC8B;AACxB,UAAA,EAAE,YAAY,UAAA,IAAc;AAC3B,WAAA,KAAK,SAAS,IAAsB;AAAA,MACzC;AAAA,MACA;AAAA,IAAA,CACD;AAAA,EAAA;AAAA,EAGa,KAId,QAC8B;AAC9B,UAAM,EAAE,KAAK,YAAY,UAAc,IAAA;AAChC,WAAA,KAAK,SAAS,KAAuB;AAAA,MAC1C;AAAA,MACA;AAAA,MACA;AAAA,IAAA,CACD;AAAA,EAAA;AAAA,EAGa,OAAO,KAA0C;AACxD,WAAA,KAAK,SAAS,OAAO,GAAG;AAAA,EAAA;AAAA,EAGjB,OAAO,KAA0C;AACxD,WAAA,KAAK,SAAS,OAAO,GAAG;AAAA,EAAA;AAAA,EAGjB,KAAQ,QAAkD;AACxE,UAAM,EAAE,KAAK,YAAY,OAAO,iBAAqB,IAAA;AAC9C,WAAA,KAAK,SAAS,KAAQ;AAAA,MAC3B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA,CACD;AAAA,EAAA;AAAA,EAGa,OACd,QAC6B;AAC7B,UAAM,EAAE,KAAK,YAAY,MAAU,IAAA;AAC5B,WAAA,KAAK,SAAS,OAAU;AAAA,MAC7B;AAAA,MACA;AAAA,MACA;AAAA,IAAA,CACD;AAAA,EAAA;AAEL;"}