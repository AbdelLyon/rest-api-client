{"version":3,"file":"BaseHttp.js","sources":["../../../src/http/BaseHttp.ts"],"sourcesContent":["import { HttpConfig } from \"./HttpConfig\";\nimport { HttpRequest } from \"./HttpRequest\";\nimport { Interceptor } from \"./Interceptor\";\nimport type { IBaseHttp } from \"./interface/IBaseHttp\";\nimport type { HttpConfigOptions, RequestConfig } from \"./types/http\";\nimport { ApiRequestError } from \"@/error/ApiRequestError\";\n\nexport class BaseHttp implements IBaseHttp {\n  private baseURL: string;\n  private defaultTimeout: number;\n  private defaultHeaders: Record<string, string>;\n  private withCredentials: boolean;\n  private maxRetries: number;\n\n  constructor () {\n    this.baseURL = \"\";\n    this.defaultTimeout = 10000;\n    this.defaultHeaders = {};\n    this.withCredentials = true;\n    this.maxRetries = 3;\n  }\n\n  configure(options: HttpConfigOptions): void {\n    this.baseURL = HttpConfig.getFullBaseUrl(options);\n    this.defaultTimeout = options.timeout ?? 10000;\n    this.maxRetries = options.maxRetries ?? 3;\n    this.withCredentials = options.withCredentials ?? true;\n\n    this.defaultHeaders = {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n      ...options.headers,\n    };\n\n    Interceptor.setupDefaultErrorInterceptor(HttpConfig.logError);\n    Interceptor.addInterceptors(options);\n  }\n\n  async request<TResponse = any>(\n    config: Partial<RequestConfig> & { url: string; },\n    options: Partial<RequestConfig> = {},\n  ): Promise<TResponse> {\n    try {\n      const mergedConfig: RequestConfig = {\n        method: \"GET\",\n        timeout: this.defaultTimeout,\n        ...config,\n        ...options,\n        headers: {\n          ...this.defaultHeaders,\n          ...(config.headers || {}),\n          ...(options.headers || {}),\n        },\n      };\n\n      const url = new URL(\n        mergedConfig.url.startsWith(\"http\")\n          ? mergedConfig.url\n          : `${this.baseURL}${mergedConfig.url.startsWith(\"/\") ? \"\" : \"/\"}${mergedConfig.url}`,\n      ).toString();\n\n      const interceptedConfig = await Interceptor.applyRequestInterceptors({\n        ...mergedConfig,\n        url,\n      });\n\n      let response = await HttpRequest.fetchWithRetry(\n        url,\n        interceptedConfig,\n        this.maxRetries,\n        this.defaultTimeout,\n        this.withCredentials,\n      );\n\n      response = await Interceptor.applyResponseSuccessInterceptors(response);\n\n      if (response.headers.get(\"content-type\")?.includes(\"application/json\")) {\n        return (await response.json()) as TResponse;\n      } else {\n        return (await response.text()) as TResponse;\n      }\n    } catch (error) {\n      const apiError =\n        error instanceof ApiRequestError\n          ? error\n          : new ApiRequestError(error, {\n            ...config,\n            ...options,\n            url: config.url,\n          });\n\n      return Interceptor.applyResponseErrorInterceptors(apiError);\n    }\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAOO,MAAM,SAA8B;AAAA,EAOzC,cAAe;AANP;AACA;AACA;AACA;AACA;AAGN,SAAK,UAAU;AACf,SAAK,iBAAiB;AACtB,SAAK,iBAAiB,CAAC;AACvB,SAAK,kBAAkB;AACvB,SAAK,aAAa;AAAA,EAAA;AAAA,EAGpB,UAAU,SAAkC;AACrC,SAAA,UAAU,WAAW,eAAe,OAAO;AAC3C,SAAA,iBAAiB,QAAQ,WAAW;AACpC,SAAA,aAAa,QAAQ,cAAc;AACnC,SAAA,kBAAkB,QAAQ,mBAAmB;AAElD,SAAK,iBAAiB;AAAA,MACpB,gBAAgB;AAAA,MAChB,QAAQ;AAAA,MACR,GAAG,QAAQ;AAAA,IACb;AAEY,gBAAA,6BAA6B,WAAW,QAAQ;AAC5D,gBAAY,gBAAgB,OAAO;AAAA,EAAA;AAAA,EAGrC,MAAM,QACJ,QACA,UAAkC,IACd;;AAChB,QAAA;AACF,YAAM,eAA8B;AAAA,QAClC,QAAQ;AAAA,QACR,SAAS,KAAK;AAAA,QACd,GAAG;AAAA,QACH,GAAG;AAAA,QACH,SAAS;AAAA,UACP,GAAG,KAAK;AAAA,UACR,GAAI,OAAO,WAAW,CAAC;AAAA,UACvB,GAAI,QAAQ,WAAW,CAAA;AAAA,QAAC;AAAA,MAE5B;AAEA,YAAM,MAAM,IAAI;AAAA,QACd,aAAa,IAAI,WAAW,MAAM,IAC9B,aAAa,MACb,GAAG,KAAK,OAAO,GAAG,aAAa,IAAI,WAAW,GAAG,IAAI,KAAK,GAAG,GAAG,aAAa,GAAG;AAAA,QACpF,SAAS;AAEL,YAAA,oBAAoB,MAAM,YAAY,yBAAyB;AAAA,QACnE,GAAG;AAAA,QACH;AAAA,MAAA,CACD;AAEG,UAAA,WAAW,MAAM,YAAY;AAAA,QAC/B;AAAA,QACA;AAAA,QACA,KAAK;AAAA,QACL,KAAK;AAAA,QACL,KAAK;AAAA,MACP;AAEW,iBAAA,MAAM,YAAY,iCAAiC,QAAQ;AAEtE,WAAI,cAAS,QAAQ,IAAI,cAAc,MAAnC,mBAAsC,SAAS,qBAAqB;AAC9D,eAAA,MAAM,SAAS,KAAK;AAAA,MAAA,OACvB;AACG,eAAA,MAAM,SAAS,KAAK;AAAA,MAAA;AAAA,aAEvB,OAAO;AACd,YAAM,WACJ,iBAAiB,kBACb,QACA,IAAI,gBAAgB,OAAO;AAAA,QAC3B,GAAG;AAAA,QACH,GAAG;AAAA,QACH,KAAK,OAAO;AAAA,MAAA,CACb;AAEE,aAAA,YAAY,+BAA+B,QAAQ;AAAA,IAAA;AAAA,EAC5D;AAEJ;"}