{"version":3,"file":"HttpConfig.js","sources":["../../../../src/http/common/HttpConfig.ts"],"sourcesContent":["import type { HttpConfigOptions } from \"@/http/types\";\n\nexport class HttpConfig {\n  static getFullBaseUrl(options: HttpConfigOptions): string {\n    if (!options.baseURL) {\n      throw new Error(\"baseURL is required in HttpConfigOptions\");\n    }\n\n    let baseUrl = options.baseURL.trim();\n    if (baseUrl.endsWith(\"/\")) {\n      baseUrl = baseUrl.slice(0, -1);\n    }\n\n    if (options.apiPrefix) {\n      let prefix = options.apiPrefix.trim();\n      if (!prefix.startsWith(\"/\")) {\n        prefix = \"/\" + prefix;\n      }\n      if (prefix.endsWith(\"/\")) {\n        prefix = prefix.slice(0, -1);\n      }\n\n      return baseUrl + prefix;\n    }\n\n    if (options.apiVersion) {\n      return `${baseUrl}/v${options.apiVersion}`;\n    }\n\n    return baseUrl;\n  }\n\n  static logError(error: any): void {\n    const errorDetails = {\n      url: error.config?.url,\n      method: error.config?.method,\n      status: error.status,\n      data: error.data,\n      message: error.message,\n    };\n\n    console.error(\"API Request Error\", errorDetails);\n  }\n}\n"],"names":[],"mappings":"AAEO,MAAM,WAAW;AAAA,EACtB,OAAO,eAAe,SAAoC;AACpD,QAAA,CAAC,QAAQ,SAAS;AACd,YAAA,IAAI,MAAM,0CAA0C;AAAA,IAAA;AAGxD,QAAA,UAAU,QAAQ,QAAQ,KAAK;AAC/B,QAAA,QAAQ,SAAS,GAAG,GAAG;AACf,gBAAA,QAAQ,MAAM,GAAG,EAAE;AAAA,IAAA;AAG/B,QAAI,QAAQ,WAAW;AACjB,UAAA,SAAS,QAAQ,UAAU,KAAK;AACpC,UAAI,CAAC,OAAO,WAAW,GAAG,GAAG;AAC3B,iBAAS,MAAM;AAAA,MAAA;AAEb,UAAA,OAAO,SAAS,GAAG,GAAG;AACf,iBAAA,OAAO,MAAM,GAAG,EAAE;AAAA,MAAA;AAG7B,aAAO,UAAU;AAAA,IAAA;AAGnB,QAAI,QAAQ,YAAY;AACtB,aAAO,GAAG,OAAO,KAAK,QAAQ,UAAU;AAAA,IAAA;AAGnC,WAAA;AAAA,EAAA;AAAA,EAGT,OAAO,SAAS,OAAkB;AA9B7B;AA+BH,UAAM,eAAe;AAAA,MACnB,MAAK,WAAM,WAAN,mBAAc;AAAA,MACnB,SAAQ,WAAM,WAAN,mBAAc;AAAA,MACtB,QAAQ,MAAM;AAAA,MACd,MAAM,MAAM;AAAA,MACZ,SAAS,MAAM;AAAA,IACjB;AAEQ,YAAA,MAAM,qBAAqB,YAAY;AAAA,EAAA;AAEnD;"}