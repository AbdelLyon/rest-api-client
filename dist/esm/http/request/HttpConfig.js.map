{"version":3,"file":"HttpConfig.js","sources":["../../../../src/http/request/HttpConfig.ts"],"sourcesContent":["import type { ConfigOptions } from \"@/http/types\";\n\ninterface ApiError extends Error {\n  config?: {\n    url?: string;\n    method?: string;\n  };\n  status?: number;\n  data?: unknown;\n}\n\nexport class HttpConfig {\n  static getFullBaseUrl(options: ConfigOptions): string {\n    if (!options.baseURL) {\n      throw new Error(\"baseURL is required in HttpConfigOptions\");\n    }\n\n    const baseUrl = options.baseURL.trim().replace(/\\/$/, \"\");\n\n    if (options.apiPrefix) {\n      const prefix = options.apiPrefix\n        .trim()\n        .replace(/^(?!\\/)/, \"/\")\n        .replace(/\\/$/, \"\");\n\n      return `${baseUrl}${prefix}`;\n    }\n\n    if (options.apiVersion) {\n      return `${baseUrl}/v${options.apiVersion}`;\n    }\n\n    return baseUrl;\n  }\n\n  static logError(error: ApiError): void {\n    const { config, status, data, message } = error;\n\n    const errorDetails = {\n      url: config?.url,\n      method: config?.method,\n      status,\n      data,\n      message,\n    };\n\n    console.error(\"API Request Error:\", errorDetails);\n  }\n}\n"],"names":[],"mappings":"AAWO,MAAM,WAAW;AAAA,EACtB,OAAO,eAAe,SAAgC;AAChD,QAAA,CAAC,QAAQ,SAAS;AACd,YAAA,IAAI,MAAM,0CAA0C;AAAA,IAAA;AAG5D,UAAM,UAAU,QAAQ,QAAQ,OAAO,QAAQ,OAAO,EAAE;AAExD,QAAI,QAAQ,WAAW;AACf,YAAA,SAAS,QAAQ,UACpB,KAAK,EACL,QAAQ,WAAW,GAAG,EACtB,QAAQ,OAAO,EAAE;AAEb,aAAA,GAAG,OAAO,GAAG,MAAM;AAAA,IAAA;AAG5B,QAAI,QAAQ,YAAY;AACtB,aAAO,GAAG,OAAO,KAAK,QAAQ,UAAU;AAAA,IAAA;AAGnC,WAAA;AAAA,EAAA;AAAA,EAGT,OAAO,SAAS,OAAuB;AACrC,UAAM,EAAE,QAAQ,QAAQ,MAAM,QAAY,IAAA;AAE1C,UAAM,eAAe;AAAA,MACnB,KAAK,iCAAQ;AAAA,MACb,QAAQ,iCAAQ;AAAA,MAChB;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAEQ,YAAA,MAAM,sBAAsB,YAAY;AAAA,EAAA;AAEpD;"}