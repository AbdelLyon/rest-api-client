{"version":3,"file":"EntityBuilder.cjs","sources":["../../../src/mutation/EntityBuilder.ts"],"sourcesContent":["\nimport type {\n   BuildOnly,\n   CreateEntityAttributes,\n   ExtractModelAttributes,\n   MutationFunction,\n   MutationRequest,\n   MutationResponse,\n   TypedMutationOperation,\n   ValidCreateNestedRelation,\n   ValidUpdateNestedRelation\n} from \"@/mutation/types/mutation\";\nimport type { IEntityBuilder } from \"@/mutation/interface/IEntityBuilder\";\nimport type { IRelationBuilder } from \"@/mutation/interface/IRelationBuilder\";\nimport type { RequestConfig } from \"@/http/types/http\";\nimport { RelationBuilder } from \"@/mutation/RelationBuilder\";\n\nexport class EntityBuilder<TModel> extends RelationBuilder implements IEntityBuilder<TModel>, BuildOnly<TModel> {\n   private operations: Array<TypedMutationOperation<TModel, any>> = [];\n   private mutationFn: MutationFunction | null = null;\n   private relationBuilder: IRelationBuilder;\n\n   constructor (relationBuilder: IRelationBuilder) {\n      super();\n      this.relationBuilder = relationBuilder;\n   }\n\n   private extractOperationData<T extends Record<string, unknown>>(\n      attributes: T\n   ): {\n      normalAttributes: Record<string, unknown>,\n      relations: Record<string, unknown>;\n   } {\n      const normalAttributes: Record<string, unknown> = {};\n      const relations: Record<string, unknown> = {};\n\n      for (const [key, value] of Object.entries(attributes)) {\n         if (value && typeof value === 'object' && 'operation' in value) {\n            relations[key] = value;\n         } else {\n            normalAttributes[key] = value;\n         }\n      }\n\n      return { normalAttributes, relations };\n   }\n\n   public setMutationFunction(fn: MutationFunction): void {\n      this.mutationFn = fn;\n   }\n\n   public createEntity<T extends Record<string, unknown>, TRelationKeys extends keyof T = never>(\n      attributes: CreateEntityAttributes<T, TRelationKeys>\n   ): BuildOnly<TModel, Pick<T, Extract<TRelationKeys, string>>> {\n      const { normalAttributes, relations } = this.extractOperationData(attributes);\n\n      const operation: TypedMutationOperation<TModel, typeof relations> = {\n         operation: \"create\",\n         attributes: normalAttributes as ExtractModelAttributes<TModel>,\n         relations\n      };\n\n      this.operations.push(operation);\n      return this as unknown as BuildOnly<TModel, Pick<T, Extract<TRelationKeys, string>>>;\n   }\n\n   public updateEntity<T extends Record<string, unknown>>(\n      key: string | number,\n      attributes: T\n   ): IEntityBuilder<TModel> {\n      const { normalAttributes, relations } = this.extractOperationData(attributes);\n\n      const operation: TypedMutationOperation<TModel, typeof relations> = {\n         operation: \"update\",\n         key,\n         attributes: normalAttributes as ExtractModelAttributes<TModel>,\n         relations\n      };\n\n      this.operations.push(operation);\n      return this;\n   }\n\n   public build(): MutationRequest<TModel, any> {\n      const result = [...this.operations];\n      this.operations = [];\n      return { mutate: result };\n   }\n\n   public async mutate(options?: Partial<RequestConfig>): Promise<MutationResponse> {\n      if (!this.mutationFn) {\n         throw new Error(\"Mutation function not provided to builder\");\n      }\n\n      const data = this.build();\n      return this.mutationFn(data, options);\n   }\n\n   public override createRelation<T extends Record<string, unknown>, TRelationKeys extends keyof T = never>(\n      attributes: T,\n      relations?: Record<TRelationKeys, ValidCreateNestedRelation<unknown>>\n   ) {\n      return this.relationBuilder.createRelation<T, TRelationKeys>(attributes, relations);\n   }\n\n   public override updateRelation<T extends Record<string, unknown>, TRelationKeys extends keyof T = never>(\n      key: string | number,\n      attributes: T,\n      relations?: Record<TRelationKeys, ValidUpdateNestedRelation<unknown>>\n   ) {\n      return this.relationBuilder.updateRelation<T, TRelationKeys>(key, attributes, relations);\n   }\n\n   public override attach(key: string | number) {\n      return this.relationBuilder.attach(key);\n   }\n\n   public override detach(key: string | number) {\n      return this.relationBuilder.detach(key);\n   }\n\n   public override sync<T>(\n      key: string | number | Array<string | number>,\n      attributes?: T,\n      pivot?: Record<string, string | number>,\n      withoutDetaching?: boolean\n   ) {\n      return this.relationBuilder.sync<T>(key, attributes, pivot, withoutDetaching);\n   }\n\n   public override toggle<T>(\n      key: string | number | Array<string | number>,\n      attributes?: T,\n      pivot?: Record<string, string | number>\n   ) {\n      return this.relationBuilder.toggle<T>(key, attributes, pivot);\n   }\n}"],"names":["RelationBuilder"],"mappings":";;;;;;AAiBO,MAAM,sBAA8BA,gBAAAA,gBAAqE;AAAA,EAK7G,YAAa,iBAAmC;AACvC,UAAA;AALD,sCAAyD,CAAC;AAC1D,sCAAsC;AACtC;AAIL,SAAK,kBAAkB;AAAA,EAAA;AAAA,EAGlB,qBACL,YAID;AACC,UAAM,mBAA4C,CAAC;AACnD,UAAM,YAAqC,CAAC;AAE5C,eAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,UAAU,GAAG;AACpD,UAAI,SAAS,OAAO,UAAU,YAAY,eAAe,OAAO;AAC7D,kBAAU,GAAG,IAAI;AAAA,MAAA,OACb;AACJ,yBAAiB,GAAG,IAAI;AAAA,MAAA;AAAA,IAC3B;AAGI,WAAA,EAAE,kBAAkB,UAAU;AAAA,EAAA;AAAA,EAGjC,oBAAoB,IAA4B;AACpD,SAAK,aAAa;AAAA,EAAA;AAAA,EAGd,aACJ,YAC2D;AAC3D,UAAM,EAAE,kBAAkB,UAAA,IAAc,KAAK,qBAAqB,UAAU;AAE5E,UAAM,YAA8D;AAAA,MACjE,WAAW;AAAA,MACX,YAAY;AAAA,MACZ;AAAA,IACH;AAEK,SAAA,WAAW,KAAK,SAAS;AACvB,WAAA;AAAA,EAAA;AAAA,EAGH,aACJ,KACA,YACuB;AACvB,UAAM,EAAE,kBAAkB,UAAA,IAAc,KAAK,qBAAqB,UAAU;AAE5E,UAAM,YAA8D;AAAA,MACjE,WAAW;AAAA,MACX;AAAA,MACA,YAAY;AAAA,MACZ;AAAA,IACH;AAEK,SAAA,WAAW,KAAK,SAAS;AACvB,WAAA;AAAA,EAAA;AAAA,EAGH,QAAsC;AAC1C,UAAM,SAAS,CAAC,GAAG,KAAK,UAAU;AAClC,SAAK,aAAa,CAAC;AACZ,WAAA,EAAE,QAAQ,OAAO;AAAA,EAAA;AAAA,EAG3B,MAAa,OAAO,SAA6D;AAC1E,QAAA,CAAC,KAAK,YAAY;AACb,YAAA,IAAI,MAAM,2CAA2C;AAAA,IAAA;AAGxD,UAAA,OAAO,KAAK,MAAM;AACjB,WAAA,KAAK,WAAW,MAAM,OAAO;AAAA,EAAA;AAAA,EAGvB,eACb,YACA,WACD;AACC,WAAO,KAAK,gBAAgB,eAAiC,YAAY,SAAS;AAAA,EAAA;AAAA,EAGrE,eACb,KACA,YACA,WACD;AACC,WAAO,KAAK,gBAAgB,eAAiC,KAAK,YAAY,SAAS;AAAA,EAAA;AAAA,EAG1E,OAAO,KAAsB;AACnC,WAAA,KAAK,gBAAgB,OAAO,GAAG;AAAA,EAAA;AAAA,EAGzB,OAAO,KAAsB;AACnC,WAAA,KAAK,gBAAgB,OAAO,GAAG;AAAA,EAAA;AAAA,EAGzB,KACb,KACA,YACA,OACA,kBACD;AACC,WAAO,KAAK,gBAAgB,KAAQ,KAAK,YAAY,OAAO,gBAAgB;AAAA,EAAA;AAAA,EAG/D,OACb,KACA,YACA,OACD;AACC,WAAO,KAAK,gBAAgB,OAAU,KAAK,YAAY,KAAK;AAAA,EAAA;AAElE;;"}